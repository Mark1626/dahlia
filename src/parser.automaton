State 0:
prog' -> . prog [ # ]
-- On LET shift to state 1
-- On INT_ANNOTATION shift to state 38
-- On IF shift to state 39
-- On ID shift to state 44
-- On FOR shift to state 51
-- On BOOL_ANNOTATION shift to state 61
-- On type_annotation shift to state 62
-- On prog shift to state 73
-- On cmd shift to state 74

State 1:
cmd -> LET . ID EQUAL expr SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On ID shift to state 2

State 2:
cmd -> LET ID . EQUAL expr SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On EQUAL shift to state 3

State 3:
cmd -> LET ID EQUAL . expr SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 36

State 4:
expr -> TRUE . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES reduce production expr -> TRUE 
-- On SEMICOLON reduce production expr -> TRUE 
-- On RSQUARE reduce production expr -> TRUE 
-- On RPAREN reduce production expr -> TRUE 
-- On RANGE_DOTS reduce production expr -> TRUE 
-- On PLUS reduce production expr -> TRUE 
-- On OR reduce production expr -> TRUE 
-- On NEQ reduce production expr -> TRUE 
-- On MINUS reduce production expr -> TRUE 
-- On LT reduce production expr -> TRUE 
-- On LEQ reduce production expr -> TRUE 
-- On GT reduce production expr -> TRUE 
-- On GEQ reduce production expr -> TRUE 
-- On EQ reduce production expr -> TRUE 
-- On AND reduce production expr -> TRUE 

State 5:
expr -> LPAREN . expr RPAREN [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 34

State 6:
expr -> INT . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES reduce production expr -> INT 
-- On SEMICOLON reduce production expr -> INT 
-- On RSQUARE reduce production expr -> INT 
-- On RPAREN reduce production expr -> INT 
-- On RANGE_DOTS reduce production expr -> INT 
-- On PLUS reduce production expr -> INT 
-- On OR reduce production expr -> INT 
-- On NEQ reduce production expr -> INT 
-- On MINUS reduce production expr -> INT 
-- On LT reduce production expr -> INT 
-- On LEQ reduce production expr -> INT 
-- On GT reduce production expr -> INT 
-- On GEQ reduce production expr -> INT 
-- On EQ reduce production expr -> INT 
-- On AND reduce production expr -> INT 

State 7:
expr -> ID . LSQUARE expr RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> ID . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On LSQUARE shift to state 8
-- On TIMES reduce production expr -> ID 
-- On SEMICOLON reduce production expr -> ID 
-- On RSQUARE reduce production expr -> ID 
-- On RPAREN reduce production expr -> ID 
-- On RANGE_DOTS reduce production expr -> ID 
-- On PLUS reduce production expr -> ID 
-- On OR reduce production expr -> ID 
-- On NEQ reduce production expr -> ID 
-- On MINUS reduce production expr -> ID 
-- On LT reduce production expr -> ID 
-- On LEQ reduce production expr -> ID 
-- On GT reduce production expr -> ID 
-- On GEQ reduce production expr -> ID 
-- On EQ reduce production expr -> ID 
-- On AND reduce production expr -> ID 

State 8:
expr -> ID LSQUARE . expr RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 10

State 9:
expr -> FALSE . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES reduce production expr -> FALSE 
-- On SEMICOLON reduce production expr -> FALSE 
-- On RSQUARE reduce production expr -> FALSE 
-- On RPAREN reduce production expr -> FALSE 
-- On RANGE_DOTS reduce production expr -> FALSE 
-- On PLUS reduce production expr -> FALSE 
-- On OR reduce production expr -> FALSE 
-- On NEQ reduce production expr -> FALSE 
-- On MINUS reduce production expr -> FALSE 
-- On LT reduce production expr -> FALSE 
-- On LEQ reduce production expr -> FALSE 
-- On GT reduce production expr -> FALSE 
-- On GEQ reduce production expr -> FALSE 
-- On EQ reduce production expr -> FALSE 
-- On AND reduce production expr -> FALSE 

State 10:
expr -> ID LSQUARE expr . RSQUARE [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . NEQ expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On RSQUARE shift to state 13
-- On PLUS shift to state 14
-- On OR shift to state 16
-- On NEQ shift to state 18
-- On MINUS shift to state 20
-- On LT shift to state 22
-- On LEQ shift to state 24
-- On GT shift to state 26
-- On GEQ shift to state 28
-- On EQ shift to state 30
-- On AND shift to state 32

State 11:
expr -> expr TIMES . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 12

State 12:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr TIMES expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES reduce production expr -> expr TIMES expr 
-- On SEMICOLON reduce production expr -> expr TIMES expr 
-- On RSQUARE reduce production expr -> expr TIMES expr 
-- On RPAREN reduce production expr -> expr TIMES expr 
-- On RANGE_DOTS reduce production expr -> expr TIMES expr 
-- On PLUS reduce production expr -> expr TIMES expr 
-- On OR reduce production expr -> expr TIMES expr 
-- On NEQ reduce production expr -> expr TIMES expr 
-- On MINUS reduce production expr -> expr TIMES expr 
-- On LT reduce production expr -> expr TIMES expr 
-- On LEQ reduce production expr -> expr TIMES expr 
-- On GT reduce production expr -> expr TIMES expr 
-- On GEQ reduce production expr -> expr TIMES expr 
-- On EQ reduce production expr -> expr TIMES expr 
-- On AND reduce production expr -> expr TIMES expr 

State 13:
expr -> ID LSQUARE expr RSQUARE . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES reduce production expr -> ID LSQUARE expr RSQUARE 
-- On SEMICOLON reduce production expr -> ID LSQUARE expr RSQUARE 
-- On RSQUARE reduce production expr -> ID LSQUARE expr RSQUARE 
-- On RPAREN reduce production expr -> ID LSQUARE expr RSQUARE 
-- On RANGE_DOTS reduce production expr -> ID LSQUARE expr RSQUARE 
-- On PLUS reduce production expr -> ID LSQUARE expr RSQUARE 
-- On OR reduce production expr -> ID LSQUARE expr RSQUARE 
-- On NEQ reduce production expr -> ID LSQUARE expr RSQUARE 
-- On MINUS reduce production expr -> ID LSQUARE expr RSQUARE 
-- On LT reduce production expr -> ID LSQUARE expr RSQUARE 
-- On LEQ reduce production expr -> ID LSQUARE expr RSQUARE 
-- On GT reduce production expr -> ID LSQUARE expr RSQUARE 
-- On GEQ reduce production expr -> ID LSQUARE expr RSQUARE 
-- On EQ reduce production expr -> ID LSQUARE expr RSQUARE 
-- On AND reduce production expr -> ID LSQUARE expr RSQUARE 

State 14:
expr -> expr PLUS . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 15

State 15:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr PLUS expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On SEMICOLON reduce production expr -> expr PLUS expr 
-- On RSQUARE reduce production expr -> expr PLUS expr 
-- On RPAREN reduce production expr -> expr PLUS expr 
-- On RANGE_DOTS reduce production expr -> expr PLUS expr 
-- On PLUS reduce production expr -> expr PLUS expr 
-- On OR reduce production expr -> expr PLUS expr 
-- On NEQ reduce production expr -> expr PLUS expr 
-- On MINUS reduce production expr -> expr PLUS expr 
-- On LT reduce production expr -> expr PLUS expr 
-- On LEQ reduce production expr -> expr PLUS expr 
-- On GT reduce production expr -> expr PLUS expr 
-- On GEQ reduce production expr -> expr PLUS expr 
-- On EQ reduce production expr -> expr PLUS expr 
-- On AND reduce production expr -> expr PLUS expr 

State 16:
expr -> expr OR . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 17

State 17:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr OR expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 14
-- On NEQ shift to state 18
-- On MINUS shift to state 20
-- On LT shift to state 22
-- On LEQ shift to state 24
-- On GT shift to state 26
-- On GEQ shift to state 28
-- On EQ shift to state 30
-- On SEMICOLON reduce production expr -> expr OR expr 
-- On RSQUARE reduce production expr -> expr OR expr 
-- On RPAREN reduce production expr -> expr OR expr 
-- On RANGE_DOTS reduce production expr -> expr OR expr 
-- On OR reduce production expr -> expr OR expr 
-- On AND reduce production expr -> expr OR expr 

State 18:
expr -> expr NEQ . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 19

State 19:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr NEQ expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 14
-- On MINUS shift to state 20
-- On SEMICOLON reduce production expr -> expr NEQ expr 
-- On RSQUARE reduce production expr -> expr NEQ expr 
-- On RPAREN reduce production expr -> expr NEQ expr 
-- On RANGE_DOTS reduce production expr -> expr NEQ expr 
-- On OR reduce production expr -> expr NEQ expr 
-- On NEQ reduce production expr -> expr NEQ expr 
-- On LT reduce production expr -> expr NEQ expr 
-- On LEQ reduce production expr -> expr NEQ expr 
-- On GT reduce production expr -> expr NEQ expr 
-- On GEQ reduce production expr -> expr NEQ expr 
-- On EQ reduce production expr -> expr NEQ expr 
-- On AND reduce production expr -> expr NEQ expr 

State 20:
expr -> expr MINUS . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 21

State 21:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr MINUS expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On SEMICOLON reduce production expr -> expr MINUS expr 
-- On RSQUARE reduce production expr -> expr MINUS expr 
-- On RPAREN reduce production expr -> expr MINUS expr 
-- On RANGE_DOTS reduce production expr -> expr MINUS expr 
-- On PLUS reduce production expr -> expr MINUS expr 
-- On OR reduce production expr -> expr MINUS expr 
-- On NEQ reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On LT reduce production expr -> expr MINUS expr 
-- On LEQ reduce production expr -> expr MINUS expr 
-- On GT reduce production expr -> expr MINUS expr 
-- On GEQ reduce production expr -> expr MINUS expr 
-- On EQ reduce production expr -> expr MINUS expr 
-- On AND reduce production expr -> expr MINUS expr 

State 22:
expr -> expr LT . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 23

State 23:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr LT expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 14
-- On MINUS shift to state 20
-- On SEMICOLON reduce production expr -> expr LT expr 
-- On RSQUARE reduce production expr -> expr LT expr 
-- On RPAREN reduce production expr -> expr LT expr 
-- On RANGE_DOTS reduce production expr -> expr LT expr 
-- On OR reduce production expr -> expr LT expr 
-- On NEQ reduce production expr -> expr LT expr 
-- On LT reduce production expr -> expr LT expr 
-- On LEQ reduce production expr -> expr LT expr 
-- On GT reduce production expr -> expr LT expr 
-- On GEQ reduce production expr -> expr LT expr 
-- On EQ reduce production expr -> expr LT expr 
-- On AND reduce production expr -> expr LT expr 

State 24:
expr -> expr LEQ . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 25

State 25:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr LEQ expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 14
-- On MINUS shift to state 20
-- On SEMICOLON reduce production expr -> expr LEQ expr 
-- On RSQUARE reduce production expr -> expr LEQ expr 
-- On RPAREN reduce production expr -> expr LEQ expr 
-- On RANGE_DOTS reduce production expr -> expr LEQ expr 
-- On OR reduce production expr -> expr LEQ expr 
-- On NEQ reduce production expr -> expr LEQ expr 
-- On LT reduce production expr -> expr LEQ expr 
-- On LEQ reduce production expr -> expr LEQ expr 
-- On GT reduce production expr -> expr LEQ expr 
-- On GEQ reduce production expr -> expr LEQ expr 
-- On EQ reduce production expr -> expr LEQ expr 
-- On AND reduce production expr -> expr LEQ expr 

State 26:
expr -> expr GT . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 27

State 27:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr GT expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 14
-- On MINUS shift to state 20
-- On SEMICOLON reduce production expr -> expr GT expr 
-- On RSQUARE reduce production expr -> expr GT expr 
-- On RPAREN reduce production expr -> expr GT expr 
-- On RANGE_DOTS reduce production expr -> expr GT expr 
-- On OR reduce production expr -> expr GT expr 
-- On NEQ reduce production expr -> expr GT expr 
-- On LT reduce production expr -> expr GT expr 
-- On LEQ reduce production expr -> expr GT expr 
-- On GT reduce production expr -> expr GT expr 
-- On GEQ reduce production expr -> expr GT expr 
-- On EQ reduce production expr -> expr GT expr 
-- On AND reduce production expr -> expr GT expr 

State 28:
expr -> expr GEQ . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 29

State 29:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr GEQ expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 14
-- On MINUS shift to state 20
-- On SEMICOLON reduce production expr -> expr GEQ expr 
-- On RSQUARE reduce production expr -> expr GEQ expr 
-- On RPAREN reduce production expr -> expr GEQ expr 
-- On RANGE_DOTS reduce production expr -> expr GEQ expr 
-- On OR reduce production expr -> expr GEQ expr 
-- On NEQ reduce production expr -> expr GEQ expr 
-- On LT reduce production expr -> expr GEQ expr 
-- On LEQ reduce production expr -> expr GEQ expr 
-- On GT reduce production expr -> expr GEQ expr 
-- On GEQ reduce production expr -> expr GEQ expr 
-- On EQ reduce production expr -> expr GEQ expr 
-- On AND reduce production expr -> expr GEQ expr 

State 30:
expr -> expr EQ . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 31

State 31:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr EQ expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 14
-- On MINUS shift to state 20
-- On SEMICOLON reduce production expr -> expr EQ expr 
-- On RSQUARE reduce production expr -> expr EQ expr 
-- On RPAREN reduce production expr -> expr EQ expr 
-- On RANGE_DOTS reduce production expr -> expr EQ expr 
-- On OR reduce production expr -> expr EQ expr 
-- On NEQ reduce production expr -> expr EQ expr 
-- On LT reduce production expr -> expr EQ expr 
-- On LEQ reduce production expr -> expr EQ expr 
-- On GT reduce production expr -> expr EQ expr 
-- On GEQ reduce production expr -> expr EQ expr 
-- On EQ reduce production expr -> expr EQ expr 
-- On AND reduce production expr -> expr EQ expr 

State 32:
expr -> expr AND . expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 33

State 33:
expr -> expr . NEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr AND expr . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 14
-- On NEQ shift to state 18
-- On MINUS shift to state 20
-- On LT shift to state 22
-- On LEQ shift to state 24
-- On GT shift to state 26
-- On GEQ shift to state 28
-- On EQ shift to state 30
-- On SEMICOLON reduce production expr -> expr AND expr 
-- On RSQUARE reduce production expr -> expr AND expr 
-- On RPAREN reduce production expr -> expr AND expr 
-- On RANGE_DOTS reduce production expr -> expr AND expr 
-- On OR reduce production expr -> expr AND expr 
-- On AND reduce production expr -> expr AND expr 

State 34:
expr -> LPAREN expr . RPAREN [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On RPAREN shift to state 35
-- On PLUS shift to state 14
-- On OR shift to state 16
-- On NEQ shift to state 18
-- On MINUS shift to state 20
-- On LT shift to state 22
-- On LEQ shift to state 24
-- On GT shift to state 26
-- On GEQ shift to state 28
-- On EQ shift to state 30
-- On AND shift to state 32

State 35:
expr -> LPAREN expr RPAREN . [ TIMES SEMICOLON RSQUARE RPAREN RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES reduce production expr -> LPAREN expr RPAREN 
-- On SEMICOLON reduce production expr -> LPAREN expr RPAREN 
-- On RSQUARE reduce production expr -> LPAREN expr RPAREN 
-- On RPAREN reduce production expr -> LPAREN expr RPAREN 
-- On RANGE_DOTS reduce production expr -> LPAREN expr RPAREN 
-- On PLUS reduce production expr -> LPAREN expr RPAREN 
-- On OR reduce production expr -> LPAREN expr RPAREN 
-- On NEQ reduce production expr -> LPAREN expr RPAREN 
-- On MINUS reduce production expr -> LPAREN expr RPAREN 
-- On LT reduce production expr -> LPAREN expr RPAREN 
-- On LEQ reduce production expr -> LPAREN expr RPAREN 
-- On GT reduce production expr -> LPAREN expr RPAREN 
-- On GEQ reduce production expr -> LPAREN expr RPAREN 
-- On EQ reduce production expr -> LPAREN expr RPAREN 
-- On AND reduce production expr -> LPAREN expr RPAREN 

State 36:
cmd -> LET ID EQUAL expr . SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
expr -> expr . NEQ expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On SEMICOLON shift to state 37
-- On PLUS shift to state 14
-- On OR shift to state 16
-- On NEQ shift to state 18
-- On MINUS shift to state 20
-- On LT shift to state 22
-- On LEQ shift to state 24
-- On GT shift to state 26
-- On GEQ shift to state 28
-- On EQ shift to state 30
-- On AND shift to state 32

State 37:
cmd -> LET ID EQUAL expr SEMICOLON . [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On RBRACK reduce production cmd -> LET ID EQUAL expr SEMICOLON 
-- On LET reduce production cmd -> LET ID EQUAL expr SEMICOLON 
-- On INT_ANNOTATION reduce production cmd -> LET ID EQUAL expr SEMICOLON 
-- On IF reduce production cmd -> LET ID EQUAL expr SEMICOLON 
-- On ID reduce production cmd -> LET ID EQUAL expr SEMICOLON 
-- On FOR reduce production cmd -> LET ID EQUAL expr SEMICOLON 
-- On EOF reduce production cmd -> LET ID EQUAL expr SEMICOLON 
-- On BOOL_ANNOTATION reduce production cmd -> LET ID EQUAL expr SEMICOLON 

State 38:
type_annotation -> INT_ANNOTATION . [ ID ]
-- On ID reduce production type_annotation -> INT_ANNOTATION 

State 39:
cmd -> IF . LPAREN expr RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On LPAREN shift to state 40

State 40:
cmd -> IF LPAREN . expr RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 41

State 41:
cmd -> IF LPAREN expr . RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On RPAREN shift to state 42
-- On PLUS shift to state 14
-- On OR shift to state 16
-- On NEQ shift to state 18
-- On MINUS shift to state 20
-- On LT shift to state 22
-- On LEQ shift to state 24
-- On GT shift to state 26
-- On GEQ shift to state 28
-- On EQ shift to state 30
-- On AND shift to state 32

State 42:
cmd -> IF LPAREN expr RPAREN . LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On LBRACK shift to state 43

State 43:
cmd -> IF LPAREN expr RPAREN LBRACK . cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On LET shift to state 1
-- On INT_ANNOTATION shift to state 38
-- On IF shift to state 39
-- On ID shift to state 44
-- On FOR shift to state 51
-- On BOOL_ANNOTATION shift to state 61
-- On type_annotation shift to state 62
-- On cmd shift to state 71

State 44:
cmd -> ID . LSQUARE expr RSQUARE REASSIGN expr SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On LSQUARE shift to state 45

State 45:
cmd -> ID LSQUARE . expr RSQUARE REASSIGN expr SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 46

State 46:
cmd -> ID LSQUARE expr . RSQUARE REASSIGN expr SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
expr -> expr . NEQ expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES RSQUARE PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On RSQUARE shift to state 47
-- On PLUS shift to state 14
-- On OR shift to state 16
-- On NEQ shift to state 18
-- On MINUS shift to state 20
-- On LT shift to state 22
-- On LEQ shift to state 24
-- On GT shift to state 26
-- On GEQ shift to state 28
-- On EQ shift to state 30
-- On AND shift to state 32

State 47:
cmd -> ID LSQUARE expr RSQUARE . REASSIGN expr SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On REASSIGN shift to state 48

State 48:
cmd -> ID LSQUARE expr RSQUARE REASSIGN . expr SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 49

State 49:
cmd -> ID LSQUARE expr RSQUARE REASSIGN expr . SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
expr -> expr . NEQ expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES SEMICOLON PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On SEMICOLON shift to state 50
-- On PLUS shift to state 14
-- On OR shift to state 16
-- On NEQ shift to state 18
-- On MINUS shift to state 20
-- On LT shift to state 22
-- On LEQ shift to state 24
-- On GT shift to state 26
-- On GEQ shift to state 28
-- On EQ shift to state 30
-- On AND shift to state 32

State 50:
cmd -> ID LSQUARE expr RSQUARE REASSIGN expr SEMICOLON . [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On RBRACK reduce production cmd -> ID LSQUARE expr RSQUARE REASSIGN expr SEMICOLON 
-- On LET reduce production cmd -> ID LSQUARE expr RSQUARE REASSIGN expr SEMICOLON 
-- On INT_ANNOTATION reduce production cmd -> ID LSQUARE expr RSQUARE REASSIGN expr SEMICOLON 
-- On IF reduce production cmd -> ID LSQUARE expr RSQUARE REASSIGN expr SEMICOLON 
-- On ID reduce production cmd -> ID LSQUARE expr RSQUARE REASSIGN expr SEMICOLON 
-- On FOR reduce production cmd -> ID LSQUARE expr RSQUARE REASSIGN expr SEMICOLON 
-- On EOF reduce production cmd -> ID LSQUARE expr RSQUARE REASSIGN expr SEMICOLON 
-- On BOOL_ANNOTATION reduce production cmd -> ID LSQUARE expr RSQUARE REASSIGN expr SEMICOLON 

State 51:
cmd -> FOR . LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On LPAREN shift to state 52

State 52:
cmd -> FOR LPAREN . LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On LET shift to state 53

State 53:
cmd -> FOR LPAREN LET . ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On ID shift to state 54

State 54:
cmd -> FOR LPAREN LET ID . EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On EQUAL shift to state 55

State 55:
cmd -> FOR LPAREN LET ID EQUAL . expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 56

State 56:
cmd -> FOR LPAREN LET ID EQUAL expr . RANGE_DOTS expr RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
expr -> expr . NEQ expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES RANGE_DOTS PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On RANGE_DOTS shift to state 57
-- On PLUS shift to state 14
-- On OR shift to state 16
-- On NEQ shift to state 18
-- On MINUS shift to state 20
-- On LT shift to state 22
-- On LEQ shift to state 24
-- On GT shift to state 26
-- On GEQ shift to state 28
-- On EQ shift to state 30
-- On AND shift to state 32

State 57:
cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS . expr RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On TRUE shift to state 4
-- On LPAREN shift to state 5
-- On INT shift to state 6
-- On ID shift to state 7
-- On FALSE shift to state 9
-- On expr shift to state 58

State 58:
cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr . RPAREN LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
expr -> expr . NEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LEQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . LT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . GT expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . EQ expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . PLUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . MINUS expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . TIMES expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . AND expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
expr -> expr . OR expr [ TIMES RPAREN PLUS OR NEQ MINUS LT LEQ GT GEQ EQ AND ]
-- On TIMES shift to state 11
-- On RPAREN shift to state 59
-- On PLUS shift to state 14
-- On OR shift to state 16
-- On NEQ shift to state 18
-- On MINUS shift to state 20
-- On LT shift to state 22
-- On LEQ shift to state 24
-- On GT shift to state 26
-- On GEQ shift to state 28
-- On EQ shift to state 30
-- On AND shift to state 32

State 59:
cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN . LBRACK cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On LBRACK shift to state 60

State 60:
cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK . cmd RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On LET shift to state 1
-- On INT_ANNOTATION shift to state 38
-- On IF shift to state 39
-- On ID shift to state 44
-- On FOR shift to state 51
-- On BOOL_ANNOTATION shift to state 61
-- On type_annotation shift to state 62
-- On cmd shift to state 68

State 61:
type_annotation -> BOOL_ANNOTATION . [ ID ]
-- On ID reduce production type_annotation -> BOOL_ANNOTATION 

State 62:
cmd -> type_annotation . ID LSQUARE INT RSQUARE SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On ID shift to state 63

State 63:
cmd -> type_annotation ID . LSQUARE INT RSQUARE SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On LSQUARE shift to state 64

State 64:
cmd -> type_annotation ID LSQUARE . INT RSQUARE SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On INT shift to state 65

State 65:
cmd -> type_annotation ID LSQUARE INT . RSQUARE SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On RSQUARE shift to state 66

State 66:
cmd -> type_annotation ID LSQUARE INT RSQUARE . SEMICOLON [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On SEMICOLON shift to state 67

State 67:
cmd -> type_annotation ID LSQUARE INT RSQUARE SEMICOLON . [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On RBRACK reduce production cmd -> type_annotation ID LSQUARE INT RSQUARE SEMICOLON 
-- On LET reduce production cmd -> type_annotation ID LSQUARE INT RSQUARE SEMICOLON 
-- On INT_ANNOTATION reduce production cmd -> type_annotation ID LSQUARE INT RSQUARE SEMICOLON 
-- On IF reduce production cmd -> type_annotation ID LSQUARE INT RSQUARE SEMICOLON 
-- On ID reduce production cmd -> type_annotation ID LSQUARE INT RSQUARE SEMICOLON 
-- On FOR reduce production cmd -> type_annotation ID LSQUARE INT RSQUARE SEMICOLON 
-- On EOF reduce production cmd -> type_annotation ID LSQUARE INT RSQUARE SEMICOLON 
-- On BOOL_ANNOTATION reduce production cmd -> type_annotation ID LSQUARE INT RSQUARE SEMICOLON 

State 68:
cmd -> cmd . cmd [ RBRACK LET INT_ANNOTATION IF ID FOR BOOL_ANNOTATION ]
cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd . RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On RBRACK shift to state 69
-- On LET shift to state 1
-- On INT_ANNOTATION shift to state 38
-- On IF shift to state 39
-- On ID shift to state 44
-- On FOR shift to state 51
-- On BOOL_ANNOTATION shift to state 61
-- On type_annotation shift to state 62
-- On cmd shift to state 70

State 69:
cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK . [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On RBRACK reduce production cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK 
-- On LET reduce production cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK 
-- On INT_ANNOTATION reduce production cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK 
-- On IF reduce production cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK 
-- On ID reduce production cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK 
-- On FOR reduce production cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK 
-- On EOF reduce production cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK 
-- On BOOL_ANNOTATION reduce production cmd -> FOR LPAREN LET ID EQUAL expr RANGE_DOTS expr RPAREN LBRACK cmd RBRACK 

State 70:
cmd -> cmd . cmd [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
cmd -> cmd cmd . [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On LET shift to state 1
-- On INT_ANNOTATION shift to state 38
-- On IF shift to state 39
-- On ID shift to state 44
-- On FOR shift to state 51
-- On BOOL_ANNOTATION shift to state 61
-- On type_annotation shift to state 62
-- On cmd shift to state 70
-- On RBRACK reduce production cmd -> cmd cmd 
-- On LET reduce production cmd -> cmd cmd 
-- On INT_ANNOTATION reduce production cmd -> cmd cmd 
-- On IF reduce production cmd -> cmd cmd 
-- On ID reduce production cmd -> cmd cmd 
-- On FOR reduce production cmd -> cmd cmd 
-- On EOF reduce production cmd -> cmd cmd 
-- On BOOL_ANNOTATION reduce production cmd -> cmd cmd 
** Conflict on LET INT_ANNOTATION IF ID FOR BOOL_ANNOTATION

State 71:
cmd -> cmd . cmd [ RBRACK LET INT_ANNOTATION IF ID FOR BOOL_ANNOTATION ]
cmd -> IF LPAREN expr RPAREN LBRACK cmd . RBRACK [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On RBRACK shift to state 72
-- On LET shift to state 1
-- On INT_ANNOTATION shift to state 38
-- On IF shift to state 39
-- On ID shift to state 44
-- On FOR shift to state 51
-- On BOOL_ANNOTATION shift to state 61
-- On type_annotation shift to state 62
-- On cmd shift to state 70

State 72:
cmd -> IF LPAREN expr RPAREN LBRACK cmd RBRACK . [ RBRACK LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
-- On RBRACK reduce production cmd -> IF LPAREN expr RPAREN LBRACK cmd RBRACK 
-- On LET reduce production cmd -> IF LPAREN expr RPAREN LBRACK cmd RBRACK 
-- On INT_ANNOTATION reduce production cmd -> IF LPAREN expr RPAREN LBRACK cmd RBRACK 
-- On IF reduce production cmd -> IF LPAREN expr RPAREN LBRACK cmd RBRACK 
-- On ID reduce production cmd -> IF LPAREN expr RPAREN LBRACK cmd RBRACK 
-- On FOR reduce production cmd -> IF LPAREN expr RPAREN LBRACK cmd RBRACK 
-- On EOF reduce production cmd -> IF LPAREN expr RPAREN LBRACK cmd RBRACK 
-- On BOOL_ANNOTATION reduce production cmd -> IF LPAREN expr RPAREN LBRACK cmd RBRACK 

State 73:
prog' -> prog . [ # ]
-- On # accept prog

State 74:
cmd -> cmd . cmd [ LET INT_ANNOTATION IF ID FOR EOF BOOL_ANNOTATION ]
prog -> cmd . EOF [ # ]
-- On LET shift to state 1
-- On INT_ANNOTATION shift to state 38
-- On IF shift to state 39
-- On ID shift to state 44
-- On FOR shift to state 51
-- On EOF shift to state 75
-- On BOOL_ANNOTATION shift to state 61
-- On type_annotation shift to state 62
-- On cmd shift to state 70

State 75:
prog -> cmd EOF . [ # ]
-- On # reduce production prog -> cmd EOF 

